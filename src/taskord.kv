#:kivy 1.10.1
#:import Path pathlib.Path
#:import get_color_from_hex kivy.utils.get_color_from_hex

<Popup>:
    size_hint: 0.8, 0.8
    title: "ã€€"
    separator_height: 0

<TextInput>:
    font_name: "code_input"
    background_normal: "images/text_input.png"
    background_active: "images/text_input_active.png"

<Button>:
    background_normal: "images/button.png"
    background_down: "images/button_down.png"

<ActionView>:
    background_image: "images/action_view.png"

<IconBase>:
    Widget:
        pos: self.parent.pos
        size: self.parent.size
        canvas.before:
            Color:
                rgba: 1, 1, 1, 1
            Rectangle:
                source: root.icon
                pos: self.x + root.padding_left, self.y + root.padding_bottom
                size:
                    self.width - root.padding_right * 2, self.height - root.padding_top * 2

<MsgPopupLayout>:
    msg_label: msg_label
    BoxLayout:
        orientation: "vertical"
        Label:
            id: msg_label
        Button:
            text: "Close"
            size_hint_y: 0.22
            on_release: root.close()

# <SaveFilePopupLayout>:
#     BoxLayout:
#         orientation: "vertical"
#         FileChooserListView:
#             id: file_chooser
#             path: str(Path().home())
#             show_hidden: True
#             on_submit: file_name_input.text = Path(self.selection[0]).parts[-1]
#         Label:
#             text: "Double click to select the file."
#             size_hint_y: None
#             height: self.texture_size[1] * 1.1
#         BoxLayout:
#             orientation: "horizontal"
#             size_hint_y: None
#             height: file_name_input.minimum_height
#             TextInput:
#                 id: file_name_input
#                 font_size: 12
#                 hint_text: "file_name"
#             Button:
#                 text: "Save File"
#                 size_hint_x: 0.44
#                 on_release:
#                     is_ok = False
#                     if file_name_input.text:\
#                     is_ok = root.save_file(str(Path(file_chooser.path) / file_name_input.text))
#                     if is_ok: root.close()
#             Button:
#                 text: "Close"
#                 size_hint_x: 0.22
#                 on_release: root.close()

# <OpenFilePopupLayout>:
#     BoxLayout:
#         orientation: "vertical"
#         FileChooserListView:
#             id: file_chooser
#             path: str(Path().home())
#             show_hidden: True
#             on_submit:
#                 if file_chooser.selection:\
#                 root.open_file(file_chooser.selection[0])
#                 if file_chooser.selection:\
#                 root.close()
#         Label:
#             text: "Click to select the file."
#             size_hint_y: None
#             height: self.texture_size[1] * 1.1
#         BoxLayout:
#             orientation: "horizontal"
#             size_hint_y: None
#             height: file_name_input.minimum_height
#             TextInput:
#                 id: file_name_input
#                 text: file_chooser.selection[0] if file_chooser.selection else ""
#                 font_size: 12
#                 hint_text: "file_name"
#             Button:
#                 text: "Open File"
#                 size_hint_x: 0.44
#                 on_release:
#                     if file_chooser.selection:\
#                     root.open_file(file_chooser.selection[0])
#                     if file_chooser.selection:\
#                     root.close()
#             Button:
#                 text: "Close"
#                 size_hint_x: 0.22
#                 on_release: root.close()

<TaskListItemCard>:
    task_description: task_description
    duration: duration
    padding: 2, 2
    spacing: 1
    size_hint_y: None
    height: task_description.minimum_height
    TextInput:
        id: task_description
        hint_text: "Task description"
        multiline: False
    TextInput:
        id: duration
        hint_text: "Duration (seconds)"
        multiline: False
    Button:
        text: "Delete"
        on_release: root.remove_task()

<ShowingCurrentTaskPopupLayout>:
    task_description: task_description
    duration: duration
    BoxLayout:
        orientation: "vertical"
        BoxLayout:
            orientation: "horizontal"
            Label:
                canvas.before:
                    Color:
                        rgba: get_color_from_hex("#464646")
                    Rectangle:
                        pos: self.pos
                        size: self.size
                text: "Task description:"
                text_size: self.size
                halign: "center"
                valign: "middle"
            Label:
                id: task_description
                text_size: self.size
                halign: "center"
                valign: "middle"
        BoxLayout:
            orientation: "horizontal"
            Label:
                canvas.before:
                    Color:
                        rgba: get_color_from_hex("#464646")
                    Rectangle:
                        pos: self.pos
                        size: self.size
                text: "Duration:"
                halign: "center"
                valign: "middle"
            Label:
                id: duration
                halign: "center"
                valign: "middle"

<MainScreen>:
    canvas.before:
        Color:
            rgba: get_color_from_hex("#2E2E2E")
        Rectangle:
            pos: root.pos
            size: root.size
    task_list: task_list
    BoxLayout:
        orientation: "vertical"
        padding: 4, 4
        spacing: 2
        BoxLayout:
            canvas.before:
                Color:
                    rgba: get_color_from_hex("#5D5D5D")
                Rectangle:
                    pos: self.pos
                    size: self.size
            orientation: "horizontal"
            size_hint_y: None
            height: 40
            padding: 4, 4
            spacing: 4
            IconWidget:
                icon: app.icon
                size_hint_x: None
                width: self.height
            Button:
                text: "License"
                size_hint_x: None
                width: self.texture_size[0] * 1.2
                on_release: app.show_license()
        ScrollView:
            StackLayout:
                id: task_list
                orientation: "lr-tb"
                padding: 4, 4
                spacing: 2
                size_hint_y: None
                height: self.minimum_height
        BoxLayout:
            orientation: "vertical"
            size_hint_y: None
            height: self.minimum_height
            padding: 2, 2
            spacing: 1
            Button:
                text: "Add task"
                size_hint_y: None
                height: self.texture_size[1] * 1.78
                on_release: root.add_task()
            Button:
                text: "Start task"
                size_hint_y: None
                height: self.texture_size[1] * 1.78
                on_release: root.start_tasks()


<LicensePopupLayout>:
    BoxLayout:
        orientation: "vertical"
        padding: 4, 4
        spacing: 2
        BoxLayout:
            orientation: "vertical"
            TextInput:
                text: root.license_showing
        Button:
            text: "Close"
            size_hint_y: None
            height: self.texture_size[1] * 1.1
            on_release: root.close()

